{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","personaje","id","alt","name","email","CardList","personajeOne","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","busquedas","target","value","state","personajes","fetch","then","response","json","this","filteredPersonajes","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,UAAUC,GAA1C,0BAAsEC,IAAI,aAClF,6BAAKL,EAAMG,UAAUG,OACrB,4BAAIN,EAAMG,UAAUI,YCJnBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMS,aAAaC,KACjB,SAAAP,GAAS,OACT,cAAC,EAAD,CAAyBA,UAAWA,GAAzBA,EAAUC,UCPtBO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,qBAAKZ,UAAU,SAAf,SACI,uBACAa,KAAK,SACLF,YAAcA,EACdG,SAAWF,QC8CRG,G,wDAjDb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,UAAWF,EAAEG,OAAOC,SAfpC,EAAKC,MAAM,CACTC,WAAW,GACXJ,UAAW,IAJF,E,qDAQb,WAAoB,IAAD,OACjBK,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAGA,EAASC,UAC1BF,MAAM,SAAAC,GAAQ,OAAG,EAAKR,SAAU,CAACK,WAAWG,S,oBAS/C,WAEI,MAAgCE,KAAKN,MAA9BC,EAAP,EAAOA,WAAYJ,EAAnB,EAAmBA,UAEbU,EAAqBN,EAAWO,QACpC,SAAA3B,GAAS,OAAIA,EAAUG,KAAKyB,cAAcC,SAASb,EAAUY,kBAG/D,OAEA,sBAAK9B,UAAU,MAAf,UACE,8CACA,qBAAKA,UAAU,mCAAf,SACE,cAAC,EAAD,CACEW,YAAY,mBACZC,aAAce,KAAKf,iBAOvB,cAAC,EAAD,CAAUJ,aAAcoB,W,GA3CdI,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc231074.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css'\n\nexport const Card = (props) => {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.personaje.id}?set=set2&size=180x180`} alt=\"Robohash\" />\n            <h2>{props.personaje.name}</h2>\n            <p>{props.personaje.email}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport './CardList.css'\nimport {Card} from '../card/Card'\n\nexport const CardList = (props) => {\n    return (\n        <div className=\"card-list\">\n        {\n            props.personajeOne.map(\n              personaje=> \n              <Card key={personaje.id} personaje={personaje} />\n            )\n          }\n        </div>\n    )\n}\n","import React from 'react'\nimport './SearchBox.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <div className=\"search\">\n            <input \n            type=\"search\" \n            placeholder={ placeholder }\n            onChange={ handleChange }\n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport { CardList } from './components/card-list/CardList';\nimport { SearchBox } from './components/search-box/SearchBox';\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      personajes:[],\n      busquedas: '',\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response=> response.json())\n    .then( response=> this.setState( {personajes:response} ) )\n    ;\n\n  }\n\n  handleChange = (e) =>{\n    this.setState({ busquedas: e.target.value });\n  }\n\n  render() { \n\n      const {personajes, busquedas} = this.state;\n\n      const filteredPersonajes = personajes.filter( \n        personaje => personaje.name.toLowerCase().includes(busquedas.toLowerCase())\n      )\n\n      return (\n\n      <div className=\"App\">\n        <h1>Monsters App</h1>\n        <div className=\"rounded-pill form-control-lg p-3\">\n          <SearchBox \n            placeholder=\"Buscar personaje\"\n            handleChange={this.handleChange}\n          />\n\n        </div>\n\n\n        {/* <CardList personajeOne={this.state.personajes} /> */}\n        <CardList personajeOne={filteredPersonajes} />\n      </div>\n\n   );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}